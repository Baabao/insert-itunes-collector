name: Continuous Security

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - 'helm/**.yaml'
      - 'Dockerfile'
      - '.github/workflows/**.yaml'
    branches-ignore:
      - main

env:
  AWS_REGION: ${{secrets.AWS_REGION}}
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

jobs:
  check-changed-files:

    name: Check changed files
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      githubaction-file-changed: ${{steps.check-files-changed.outputs.githubaction_file_changed}}
      dockerfile-changed: ${{steps.check-files-changed.outputs.dockerfile_changed}}
      chart-changed: ${{steps.check-files-changed.outputs.chart_changed}}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{github.ref}}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          since_last_remote_commit: true
          files: |
            .github/workflows/**.yaml
            Dockerfile
            helm/**.yaml

      - name: Check files changed
        id: check-files-changed
        env:
          ALL_CHANGED_FILES: ${{steps.changed-files.outputs.all_changed_files}}
        run: |
          if [[ "$ALL_CHANGED_FILES" == *".github/workflows/"*.yaml* ]]; then
              echo "githubaction_file_changed=true" >> "$GITHUB_OUTPUT"
              echo "GitHub Action files were changed, lint it later."
          else
              echo "GitHub Action files didn't change, skip lint-github-action job."
          fi

          if [[ "$ALL_CHANGED_FILES" == *"Dockerfile"* ]]; then
              echo "dockerfile_changed=true" >> "$GITHUB_OUTPUT"
              echo "Dockerfile was changed, lint it later."
          else
              echo "Dockerfile didn't change, skip lint-dockerfile job."
          fi

          if [[ "$ALL_CHANGED_FILES" == *"helm/"*.yaml* ]]; then
              echo "chart_changed=true" >> "$GITHUB_OUTPUT"
              echo "Helm files were changed, lint it later."
          else
              echo "Helm files didn't change, skip lint-helm job."
          fi

  lint-github-action:

    needs: [ check-changed-files ]
    if: needs.check-changed-files.outputs.githubaction-file-changed == 'true'

    name: Lint GitHub Action
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}

      # https://github.com/rhysd/actionlint/blob/main/docs/usage.md#use-actionlint-on-github-actions
      - name: Check workflow files
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color -ignore 'the runner of ".+" action is too old to run on GitHub Actions. update the action'\''s version to fix this issue'
        shell: bash

  lint-dockerfile:

    needs: [ check-changed-files ]
    if: needs.check-changed-files.outputs.dockerfile-changed == 'true'

    name: Lint Dockerfile
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  lint-helm:

    needs: [ check-changed-files ]
    if: needs.check-changed-files.outputs.chart-changed == 'true'

    name: Lint Helm
    environment: staging  # just lint use
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.14.4

      - name: Lint Helm files
        env:
          PROD: ${{vars.PROD}}
          # avoid assign `AWS_ACCESS_KEY_ID` & `AWS_SECRET_ACCESS_KEY` in each step
          EXECUTE_AWS_ACCESS_KEY_ID: ${{env.AWS_ACCESS_KEY_ID}}
          EXECUTE_AWS_SECRET_ACCESS_KEY: ${{env.AWS_SECRET_ACCESS_KEY}}
          POSTGRES_SECRET_ID: ${{secrets.POSTGRES_SECRET_ID}}

        run: |
          helm lint helm \
          --set global.PROD="${PROD}" \
          --set global.AWS_ACCESS_KEY_ID="${EXECUTE_AWS_ACCESS_KEY_ID}" \
          --set global.AWS_SECRET_ACCESS_KEY="${EXECUTE_AWS_SECRET_ACCESS_KEY}" \
          --set global.REGION="${AWS_REGION}" \
          --set global.POSTGRES_SECRET_ID="${POSTGRES_SECRET_ID}"
